'
'Example for Expand Click
'
'    Date          : Nov 2018.
'    Author        : Nenad Filipovic
'
'Test configuration AVR :
'    
'    MCU              : ATMEGA32
'    Dev. Board       : EasyAVR v7 
'    AVR Compiler ver : v7.0.1.0
'
'---
'
'Description :
'
'The application is composed of three sections :
'
'- System Initialization - Initializes GPIO and LOG structures,
'     set CS and RST pins as output, INT pin as input.
'- Application Initialization - Initialization driver enable's - GPIO,
'     reset MCP23S17 chip, set PORTA to be output and PORTB to be input,
'     set default configuration and start write log.
'- Application Task - (code snippet) This is a example which demonstrates the use of Expand Click board.
'     Expand Click communicates with register via SPI protocol by write and read from register,
'     set configuration and state and read configuration and state.
'     Results are being sent to the Usart Terminal where you can track their changes.
'     All data logs on usb uart for aproximetly every 3 sec.
'
'
program Click_Expand_AVR

include Click_Expand_types
include Click_Expand_config

dim
    portStatus as uint8_t 
    position as uint8_t 
    pinPosition as uint16_t 
    logText as char[50] 
    
sub procedure systemInit() 

    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_INT_PIN, _GPIO_INPUT) 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_CS_PIN, _GPIO_OUTPUT) 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_RST_PIN, _GPIO_OUTPUT) 
    mikrobus_spiInit(_MIKROBUS1, @_EXPAND_SPI_CFG[0]) 
    mikrobus_logInit(_LOG_USBUART, 9600) 
    Delay_ms(100) 

end sub

sub procedure applicationInit() 

    expand_spiDriverInit(T_EXPAND_P(@_MIKROBUS1_GPIO), T_EXPAND_P(@_MIKROBUS1_SPI)) 
    expand_reset() 
    Delay_ms(1000) 
    mikrobus_logWrite("----------------", _LOG_LINE) 
    mikrobus_logWrite("  Expand Click  ", _LOG_LINE) 
    mikrobus_logWrite("----------------", _LOG_LINE) 
    expand_setDirectionPortA(_EXPAND_SPI_MODULE_POSITION_0, _EXPAND_PORT_DIRECTION_OUTPUT) 
    expand_setDirectionPortB(_EXPAND_SPI_MODULE_POSITION_0, _EXPAND_PORT_DIRECTION_INPUT) 
    mikrobus_logWrite(" Configuring... ", _LOG_LINE) 
    mikrobus_logWrite("----------------", _LOG_LINE) 
    expand_defaultConfiguration(_EXPAND_SPI_MODULE_POSITION_0) 

end sub

sub procedure applicationTask() 

    pinPosition = 1 
    for position = 0 to 8-1
        expand_writePortA(_EXPAND_SPI_MODULE_POSITION_0, pinPosition) 
        Delay_100ms() 
        portStatus = expand_readPortB(_EXPAND_SPI_MODULE_POSITION_0) 
        IntToStr(position, logText) 
        mikrobus_logWrite("       RA", _LOG_TEXT) 
        ltrim(logText) 
        mikrobus_logWrite(logText, _LOG_LINE) 
        IntToStr(portStatus, logText) 
        mikrobus_logWrite("  PORTB: ", _LOG_TEXT) 
        mikrobus_logWrite(logText, _LOG_LINE) 
        mikrobus_logWrite("----------------", _LOG_LINE) 
        pinPosition = (pinPosition << 1) 
        Delay_ms(3000) 
    next position

end sub

main :

    systemInit() 
    applicationInit() 
    while (1) 
        applicationTask() 
    wend

end.